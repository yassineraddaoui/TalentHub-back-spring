name: Build and Run Spring Boot App

on:
  push:
    branches:
      - '**'  
  pull_request:
    branches:
      - '**'  

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: offre_emploi  
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Java JDK
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: unit tests
        run: mvn -B test --file pom.xml

          
      - name: Build with Maven
        run: |
            mvn clean
            mvn -B package --file pom.xml
            
      - name: Build Docker image
        run: docker build -t my-spring-boot-app .

      - name: Run Docker container
        run: |
          docker run -d --name spring-boot-app \
          -p 8080:8080 \
          --env SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/offre_emploi \  
          --env SPRING_DATASOURCE_USERNAME=user \
          --env SPRING_DATASOURCE_PASSWORD=password \  
          --env SPRING_MAIL_HOST=smtp.gmail.com 
